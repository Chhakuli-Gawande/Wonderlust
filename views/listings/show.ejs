 <% layout('layouts/boillerplate') %>
 
<body>

 <div class="row mb-3 mt-3">
   <div class="col-8 offset-3">

    <h2><%= listing.title %></h2>
</div>
    <div class="card col-6 offset-3 show-card listing-card">
        <img src="<%= listing.image.url %>"
         class="card-img-top show-img" alt="listing_image">

        <div class="card-body">
            <p class="card-text">  Owned By: 
                <%= listing.owner.username %>
            </p>
            
            <p class="card-text"> <%= listing.description %></p>
            <p class="card-text">   &#8377; <%= listing.price.toLocaleString("en-IN") %></p>
            <p class="card-text">  <%= listing.country %> </p>
            <p class="card-text"><%= listing.location %></p>
    </div>
    </div>

    <br>
   <% if(currtUser && listing.owner._id.equals(currtUser._id)) { %>
 <div class="btns">
    <a href="/listings/<%= listing._id %>/edit" 
        class="btn btn-dark col-1 offset-3 edit-btn">Edit</a>
    
 
    <form method="post" action="/listings/<%= listing._id %>?_method=DELETE">
        <button  class="btn btn-dark offset-5">Delete </button>
    </form>
 </div>


 <%  } %>


 <div class="col-8 offset-3">
 
    <% if(currtUser) { %>
        <hr>
    <h4>Leave a Review</h4>
    <form method="post" action="/listings/<%= listing._id %>/reviews" novalidate class="needs-validation">
       
        <div class="mb-3 mt-3">
        <label for="rating" class="form-label">Rating</label>
        <fieldset class="starability-slot">
        
            <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" 
            value="1" checked aria-label="No rating." />

            <input type="radio" id="first-rate1"name="review[rating]" value="1" />

            <label for="first-rate1" title="Terrible">1 star</label>
            <input type="radio" id="first-rate2" name="review[rating]" value="2" />
            <label for="first-rate2" title="Not good">2 stars</label>
            <input type="radio" id="first-rate3" name="review[rating]" value="3" />
            <label for="first-rate3" title="Average">3 stars</label>
            <input type="radio" id="first-rate4" name="review[rating]" value="4" />
            <label for="first-rate4" title="Very good">4 stars</label>
            <input type="radio" id="first-rate5" name="review[rating]" value="5" />
            <label for="first-rate5" title="Amazing">5 stars</label>
          </fieldset>
        </div>
        <div class="mb-3 mt-3">
            <label for="comment" class="form-label">Comments</label>
            <textarea 
                name="review[comment]" 
                id="comment" 
                rows="5" 
                class="form-control" 
                placeholder="Write your comment here " 
                required
            ></textarea>
            <div class="invalid-feedback">
                Please add a comment!
            </div>
        </div>
        
         <button class="mb-3 btn-outline-dark" type="submit">Submit</button>
     
    </form>
    <hr>
<% } %>

<% if (listing.reviews.length > 0) { %>
    <h4>All Reviews</h4>
        
        <% for (review of listing.reviews) { %>
            <div class="card  offset-3 col-5 ms-3 mb-3 review-card offset-3 ">
                <div class="card-body">
                    <h5 class="card-title">@ <%= review.auther.username %></h5>
                    <p class="starability-result card-text" data-rating="<%= review.rating %>"></p>
                    <p class="card-text"> <%= review.comment %></p>
                </div>
                <form class="mb-3" method="post" action="/listings/<%= listing._id %>/reviews/<%= review._id %>?_method=DELETE">
                    <button class="btn btn-sm btn-dark">Delete</button>
                </form>
            </div>
        <% } %>
    </div>
<% } %>

 </div>
 


<div class="col-5 offset-3 mb-3 map-container ">
    <h4>Where you'll be </h4>                                                                                       
    <div id="map">
       
    </div>
   
</div>


 </div>

 <script>
        // Initialize the map
        var map = L.map('map').setView([28.6139, 77.2090], 13); // Default view (Delhi coordinates)

        // Add OpenStreetMap tile layer
        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);

        // Add the geocoder control to the map
        L.Control.geocoder({
            defaultMarkGeocode: false
        })
        .on('markgeocode', function (e) {
            const bbox = e.geocode.bbox;
            const poly = L.polygon([
                [bbox.getSouthEast().lat, bbox.getSouthEast().lng],
                [bbox.getNorthEast().lat, bbox.getNorthEast().lng],
                [bbox.getNorthWest().lat, bbox.getNorthWest().lng],
                [bbox.getSouthWest().lat, bbox.getSouthWest().lng]
            ]).addTo(map);
            map.fitBounds(poly.getBounds());
        })
        .addTo(map);

        // Watch user location
        navigator.geolocation.watchPosition(success, error);

        let marker, circle, zoomed;

        // Success callback function for geolocation
        function success(pos) {
            const lat = pos.coords.latitude;
            const lng = pos.coords.longitude;
            const accuracy = pos.coords.accuracy;

            // Remove previous location markers
            if (marker) {
                map.removeLayer(marker);
                map.removeLayer(circle);
            }

            // Add marker and circle for live location
            marker = L.marker([lat, lng]).addTo(map);
            circle = L.circle([lat, lng], {
                color: 'blue',
                fillColor: '#30f',
                fillOpacity: 0.1,
                radius: accuracy
            }).addTo(map);

            // Set map view to live location
            if (!zoomed) {
                map.setView([lat, lng], 16);
                zoomed = true;
            }
        }

        // Error callback function for geolocation
        function error(err) {
            console.error("Unable to retrieve location:", err.message);
        }

    </script>
</body>
